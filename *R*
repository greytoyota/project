
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> > options(STERM='iESS', str.dendrogram.last="'", editor='emacsclient', show.error.locations=TRUE)
> ling.data = read.table('lingData.txt', head=TRUE)
> head(ling.data)
  ID       CITY STATE   ZIP Q050 Q051 Q052 Q053 Q054 Q055 Q056 Q057 Q058 Q059
1  1      Boise    ID 83704    4    1    3    2    3    1    1    2    2   20
2  2 Pittsfield    MA  1201    4    2    3    2    2    2    2    1    1   21
3  3 Burlington    VT  5401    4    1    2    2    2    2    2    2    3   20
4  4     Easton    PA 18042    7    1    1    2    2    2    1    1    2   20
5  5    Bedford    MA  1730    8    2    3    1    2    2    2    2    3    2
6  6  SugarLand    TX 77479    8    2    1    2    2    2    2    2    3   20
  Q060 Q061 Q062 Q063 Q064 Q065 Q066 Q067 Q068 Q069 Q070 Q071 Q072 Q073 Q074
1    8    4    2    1    1    2    2    1    7    4    6    5    1    6    1
2    8    0    2    1    2    2    1    1    3    3    6    2    1    1   13
3    9    6    2    1    1    2    1    1    7    6    7    5    1    1    3
4    8    4    2    1    3    3    2    1    7    6    7    5    1    1   14
5    5    7    2    1    1    3    1    1    7    6    6    0    1    1    5
6    8    7    6    1    5    1    1    1    7    6    7    5    1    6    4
  Q075 Q076 Q077 Q078 Q079 Q080 Q081 Q082 Q083 Q084 Q085 Q086 Q087 Q088 Q089
1    1    7    4    3    9    8    1   16    7    6    6    3    1    1    3
2    1    1    1    3    1    1    1   12    1    1    2    2    1    4    2
3    3    1    1    1    1    1    1    2    1    1    2    1    1    7    3
4    1    9    1    3    7    1    1    8    5    4    1    2    1    7    3
5    1    1    1    3    1    1    3    2    1    1    6    1    1    3    1
6    1    4    1    3    9    3    1    2    5    6    2    3    3    4    1
  Q090 Q091 Q092 Q093 Q094 Q095 Q096 Q097 Q098 Q099 Q100 Q101 Q102 Q103 Q104
1    1    2    3    2    3    6    2    6    0    6    0    5   11    3    1
2    1    2    3    2    3    1    3    5    0    3    4    2    1    4    1
3    1    2    3    2    3    2    5    1    0    7    4    2    9    3    3
4    1    2    3    3    4    1    5    2    0    2    5    2   10    4    1
5    1    2    3    2    3    2    7    5    0    3    4    2    1    4    1
6    2    2    3    2    3    1    1    5    0    4    1    2    1    4    1
  Q105 Q106 Q107 Q109 Q110 Q111 Q115 Q117 Q118 Q119 Q120 Q121      lat
1    5    8    3    1    8    2    1    6    7    3    2    3 43.63123
2    1    1    3    1    8    2    1    1    7    1    1    3 42.45384
3    1    1    3    1    4    2    1    4    7    1    2    1 44.48404
4    1    3    3    1    8    1    1    3    7    1    2    1 40.68180
5    1    1    3    1    8    3    1    5    8    1    1    1 42.49668
6    3    4    2    2    8    3    5    1    2    1    2    3 29.57334
        long
1 -116.28716
2  -73.25400
3  -73.22127
4  -75.22082
5  -71.27505
6  -95.63213
> dim(ling.data)
[1] 47471    73
> sums = rowSums(ling.data)
Error: could not find function "rowSum"
> sums = rowSums(ling.data)
Error in rowSums(ling.data) : 'x' must be numeric
> head(ling.data[, 5:72])
[1] 4 4 4 7 8 8
> head(ling.data[, 5:71])
  Q050 Q051 Q052 Q053 Q054 Q055 Q056 Q057 Q058 Q059 Q060 Q061 Q062 Q063 Q064
1    4    1    3    2    3    1    1    2    2   20    8    4    2    1    1
2    4    2    3    2    2    2    2    1    1   21    8    0    2    1    2
3    4    1    2    2    2    2    2    2    3   20    9    6    2    1    1
4    7    1    1    2    2    2    1    1    2   20    8    4    2    1    3
5    8    2    3    1    2    2    2    2    3    2    5    7    2    1    1
6    8    2    1    2    2    2    2    2    3   20    8    7    6    1    5
  Q065 Q066 Q067 Q068 Q069 Q070 Q071 Q072 Q073 Q074 Q075 Q076 Q077 Q078 Q079
1    2    2    1    7    4    6    5    1    6    1    1    7    4    3    9
2    2    1    1    3    3    6    2    1    1   13    1    1    1    3    1
3    2    1    1    7    6    7    5    1    1    3    3    1    1    1    1
4    3    2    1    7    6    7    5    1    1   14    1    9    1    3    7
5    3    1    1    7    6    6    0    1    1    5    1    1    1    3    1
6    1    1    1    7    6    7    5    1    6    4    1    4    1    3    9
  Q080 Q081 Q082 Q083 Q084 Q085 Q086 Q087 Q088 Q089 Q090 Q091 Q092 Q093 Q094
1    8    1   16    7    6    6    3    1    1    3    1    2    3    2    3
2    1    1   12    1    1    2    2    1    4    2    1    2    3    2    3
3    1    1    2    1    1    2    1    1    7    3    1    2    3    2    3
4    1    1    8    5    4    1    2    1    7    3    1    2    3    3    4
5    1    3    2    1    1    6    1    1    3    1    1    2    3    2    3
6    3    1    2    5    6    2    3    3    4    1    2    2    3    2    3
  Q095 Q096 Q097 Q098 Q099 Q100 Q101 Q102 Q103 Q104 Q105 Q106 Q107 Q109 Q110
1    6    2    6    0    6    0    5   11    3    1    5    8    3    1    8
2    1    3    5    0    3    4    2    1    4    1    1    1    3    1    8
3    2    5    1    0    7    4    2    9    3    3    1    1    3    1    4
4    1    5    2    0    2    5    2   10    4    1    1    3    3    1    8
5    2    7    5    0    3    4    2    1    4    1    1    1    3    1    8
6    1    1    5    0    4    1    2    1    4    1    3    4    2    2    8
  Q111 Q115 Q117 Q118 Q119 Q120 Q121      lat
1    2    1    6    7    3    2    3 43.63123
2    2    1    1    7    1    1    3 42.45384
3    2    1    4    7    1    2    1 44.48404
4    1    1    3    7    1    2    1 40.68180
5    3    1    5    8    1    1    1 42.49668
6    3    5    1    2    1    2    3 29.57334
> head(ling.data[, 5:71])
  Q050 Q051 Q052 Q053 Q054 Q055 Q056 Q057 Q058 Q059 Q060 Q061 Q062 Q063 Q064
1    4    1    3    2    3    1    1    2    2   20    8    4    2    1    1
2    4    2    3    2    2    2    2    1    1   21    8    0    2    1    2
3    4    1    2    2    2    2    2    2    3   20    9    6    2    1    1
4    7    1    1    2    2    2    1    1    2   20    8    4    2    1    3
5    8    2    3    1    2    2    2    2    3    2    5    7    2    1    1
6    8    2    1    2    2    2    2    2    3   20    8    7    6    1    5
  Q065 Q066 Q067 Q068 Q069 Q070 Q071 Q072 Q073 Q074 Q075 Q076 Q077 Q078 Q079
1    2    2    1    7    4    6    5    1    6    1    1    7    4    3    9
2    2    1    1    3    3    6    2    1    1   13    1    1    1    3    1
3    2    1    1    7    6    7    5    1    1    3    3    1    1    1    1
4    3    2    1    7    6    7    5    1    1   14    1    9    1    3    7
5    3    1    1    7    6    6    0    1    1    5    1    1    1    3    1
6    1    1    1    7    6    7    5    1    6    4    1    4    1    3    9
  Q080 Q081 Q082 Q083 Q084 Q085 Q086 Q087 Q088 Q089 Q090 Q091 Q092 Q093 Q094
1    8    1   16    7    6    6    3    1    1    3    1    2    3    2    3
2    1    1   12    1    1    2    2    1    4    2    1    2    3    2    3
3    1    1    2    1    1    2    1    1    7    3    1    2    3    2    3
4    1    1    8    5    4    1    2    1    7    3    1    2    3    3    4
5    1    3    2    1    1    6    1    1    3    1    1    2    3    2    3
6    3    1    2    5    6    2    3    3    4    1    2    2    3    2    3
  Q095 Q096 Q097 Q098 Q099 Q100 Q101 Q102 Q103 Q104 Q105 Q106 Q107 Q109 Q110
1    6    2    6    0    6    0    5   11    3    1    5    8    3    1    8
2    1    3    5    0    3    4    2    1    4    1    1    1    3    1    8
3    2    5    1    0    7    4    2    9    3    3    1    1    3    1    4
4    1    5    2    0    2    5    2   10    4    1    1    3    3    1    8
5    2    7    5    0    3    4    2    1    4    1    1    1    3    1    8
6    1    1    5    0    4    1    2    1    4    1    3    4    2    2    8
  Q111 Q115 Q117 Q118 Q119 Q120 Q121
1    2    1    6    7    3    2    3
2    2    1    1    7    1    1    3
3    2    1    4    7    1    2    1
4    1    1    3    7    1    2    1
5    3    1    5    8    1    1    1
6    3    5    1    2    1    2    3
> sums = rowSums(ling.data[, 5:71])
> length(sums)
[1] 47471
> no.responses = (sums == 0)